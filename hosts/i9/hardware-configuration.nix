# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.kernelParams = [ "intel_iommu=on" "iommu=pt" ];

  # These modules are required for PCI passthrough, and must come before early modesetting stuff
  boot.kernelModules = [ "kvm-intel" "vfio_virqfd" "vfio_pci" "vfio_iommu_type1" "vfio" ]; # "xhci_pci" ];
  boot.extraModprobeConfig = "options vfio-pci ids=10de:2206,10de:1aef,1987:5012}";

  boot.blacklistedKernelModules = [ "nvidia" "nvidiafb" "nouveau" "nvme" ];

  #  environment.systemPackages = with pkgs; [
  #    virtmanager
  #    qemu
  #    pciutils
  #    looking-glass-client
  #  ];

  #  virtualisation.libvirtd.enable = true;
  #  virtualisation.libvirtd.qemu.package = pkgs.qemu_kvm;
  #  virtualisation.libvirtd.qemu.runAsRoot = false;

  users.groups.libvirtd.members = [ "root" "robert" ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/135a6521-ddb6-42d7-83a4-629de0608a3c";
      fsType = "ext4";
    };

  fileSystems."/mnt/share" =
    { device = "/dev/disk/by-label/share";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/8394-E5AD";
      fsType = "vfat";
    };

  swapDevices = [ ];

  networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  #hardware.opengl.enable = true;
  #hardware.nvidia.package = config.boot.kernelPackages.nvidiaPackages.stable;
  #hardware.nvidia.modesetting.enable = true;
}
